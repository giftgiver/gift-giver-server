{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2018-11-24T22:21:16.984Z",
    "end": "2018-11-24T22:21:17.038Z",
    "duration": 54,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "dfd600d0-5977-457f-963e-c260de9b6b26",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "7e70a015-0738-4319-b03f-0d5d955bffad",
        "title": "index",
        "fullFile": "/Users/mychaelwalton/dev/gift-giver/gift-giver-server/test/indexSpec.js",
        "file": "/test/indexSpec.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "index \"before all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "sandbox = sinon.createSandbox();",
            "err": {},
            "isRoot": false,
            "uuid": "63813d19-ce38-4f65-8b1d-e29a44b7e0e1",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook",
            "fullTitle": "index \"before each\" hook",
            "timedOut": false,
            "duration": 2,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "log = require('../src/log').logger;\nlistenStub = sandbox.stub(server, 'listen');\nsetupAWSStub = sandbox.stub(docClient, 'setupAWS');\nlogErrorStub = sandbox.stub(log, 'error');\nmockServer = { listen: sandbox.stub() };",
            "err": {},
            "isRoot": false,
            "uuid": "58b1b552-6e59-4f5c-b406-3209fe7d68b9",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "index \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "sandbox.restore();",
            "err": {},
            "isRoot": false,
            "uuid": "4f162e82-b917-41ec-91db-9fbe6382a954",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [],
        "suites": [
          {
            "uuid": "d637e48a-5cf0-4624-ad5f-4d1b50ba8b16",
            "title": "start",
            "fullFile": "/Users/mychaelwalton/dev/gift-giver/gift-giver-server/test/indexSpec.js",
            "file": "/test/indexSpec.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "should call dynamo init and server.listen with port provided",
                "fullTitle": "index start should call dynamo init and server.listen with port provided",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "await index.start(TEST_PORT);\nexpect(setupAWSStub.callCount, 'setupAWS is called once').to.equal(1);\nexpect(listenStub.callCount, 'listen is called once').to.equal(1);\nexpect(\n  listenStub.getCall(0).args[0],\n  'listen is called with provided port'\n).to.equal(TEST_PORT);",
                "err": {},
                "isRoot": false,
                "uuid": "1afc578f-2641-4fb1-b62a-f5e0c6bdf304",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "should log and throw if server throws error",
                "fullTitle": "index start should log and throw if server throws error",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "const mockErrorString = `Error starting server : ${MOCK_ERROR}`;\nlistenStub.throws(MOCK_ERROR);\ntry {\n  await index.start(TEST_PORT);\n} catch (error) {\n  expect(logErrorStub.callCount).to.equal(1);\n  expect(logErrorStub.getCall(0).args[0]).to.equal(mockErrorString);\n  expect(error.message).to.equal(MOCK_ERROR);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "8b2ea5c4-65ea-4017-951a-ee8f447ea3f5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1afc578f-2641-4fb1-b62a-f5e0c6bdf304",
              "8b2ea5c4-65ea-4017-951a-ee8f447ea3f5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 7,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "1107c0c0-a4e5-4482-a44a-5f2ede3488a1",
        "title": "",
        "fullFile": "/Users/mychaelwalton/dev/gift-giver/gift-giver-server/test/serverSpec.js",
        "file": "/test/serverSpec.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "\"before all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "sandbox = sinon.createSandbox();",
            "err": {},
            "isRoot": true,
            "uuid": "00146c43-6a97-4e2d-9535-921e60395b96",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook",
            "fullTitle": "\"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": true,
            "uuid": "f948fca7-9371-47a6-87dc-fe95b9ec9787",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "\"after each\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "sandbox.restore();",
            "err": {},
            "isRoot": true,
            "uuid": "8ba8965c-245b-40ae-9012-c03075cc4da1",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [],
        "suites": [
          {
            "uuid": "d7270301-fded-47e5-91dd-e9886e2b47fe",
            "title": "",
            "fullFile": "/Users/mychaelwalton/dev/gift-giver/gift-giver-server/test/serverSpec.js",
            "file": "/test/serverSpec.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "",
                "fullTitle": "",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "err": {},
                "isRoot": true,
                "uuid": "a9858e9e-1272-4745-96e8-d79f95cd96dc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a9858e9e-1272-4745-96e8-d79f95cd96dc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": true,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": true,
        "rootEmpty": true,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}